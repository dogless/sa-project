var GmapsCompleter,GmapsCompleterDefaultAssist,__bind=function(t,e){return function(){return t.apply(e,arguments)}};GmapsCompleter=function(){function t(t){this.keyDownHandler=__bind(this.keyDownHandler,this),this.performGeocode=__bind(this.performGeocode,this),this.init(t)}return t.prototype.geocoder=null,t.prototype.map=null,t.prototype.marker=null,t.prototype.inputField=null,t.prototype.errorField=null,t.prototype.positionOutputter=null,t.prototype.updateUI=null,t.prototype.updateMap=null,t.prototype.region=null,t.prototype.country=null,t.prototype.debugOn=!1,t.prototype.mapElem=null,t.prototype.zoomLevel=2,t.prototype.mapType=null,t.prototype.pos=[0,0],t.prototype.inputField="#gmaps-input-address",t.prototype.errorField="#gmaps-error",t.prototype.init=function(t){var e,i,n,s,o,r,a,l,u,h,c,d,p;t=t||{},e=$.extend(!0,{},t),this.debugOn=t.debugOn,this.debug("init(opts)",t),i=t.assist;try{this.assist=new i}catch(f){n=f,this.debug("assist error",n,t.assist)}return this.assist||(this.assist=new GmapsCompleterDefaultAssist),this.defaultOptions=t.defaultOptions||this.assist.options,t=$.extend(!0,{},this.defaultOptions,t),this.positionOutputter=t.positionOutputter||this.assist.positionOutputter,this.updateUI=t.updateUI||this.assist.updateUI,this.updateMap=t.updateMap||this.assist.updateMap,this.geocodeErrorMsg=t.geocodeErrorMsg||this.assist.geocodeErrorMsg,this.geocodeErrorMsg=t.geocodeErrorMsg||this.assist.geocodeErrorMsg,this.noAddressFoundMsg=t.noAddressFoundMsg||this.assist.noAddressFoundMsg,h=t.pos,s=h[0],r=h[1],p=t.kml,u=t.mapType,a=null,this.mapElem=$("gmaps-canvas"),t.mapElem&&(this.mapElem=$(t.mapElem).get(0)),this.mapType=google.maps.MapTypeId.ROADMAP,d=t.zoomLevel,this.inputField=t.inputField,this.errorField=t["#gmaps-error"],this.debugOn=t.debugOn,this.debug("called with opts",e),this.debug("final completerAssist",this.completerAssist),this.debug("defaultOptions",this.defaultOptions),this.debug("options after merge with defaults",t),o=new google.maps.LatLng(s,r),this.debug("lat,lng",o),l={zoom:d,center:o,mapTypeId:u},this.debug("map options",l),this.geocoder=new google.maps.Geocoder,c=this,"undefined"==typeof this.mapElem&&this.showError("Map element "+t.mapElem+" could not be resolved!"),this.debug("mapElem",this.mapElem),this.mapElem&&(this.map=new google.maps.Map(this.mapElem,l),p&&(kmlLayer=new google.maps.KmlLayer({url:p}),kmlLayer.setMap(this.map)),this.map)?(this.marker=new google.maps.Marker({map:this.map,draggable:!0}),c.addMapListeners(this.marker,this.map)):void 0},t.prototype.debug=function(t,e){return this.debugOn?console.log(t,e):void 0},t.prototype.addMapListeners=function(t,e){var i;return i=this,google.maps.event.addListener(t,"dragend",function(){return i.geocodeLookup("latLng",t.getPosition())}),google.maps.event.addListener(e,"click",function(e){return t.setPosition(e.latLng),i.geocodeLookup("latLng",e.latLng)})},t.prototype.geocodeLookup=function(t,e){var i;return this.update||(this.update=!1),i={},i[t]=e,this.geocoder.geocode(i,this.performGeocode)},t.prototype.performGeocode=function(t,e){return this.debug("performGeocode",e),$(this.errorField).html(""),e===google.maps.GeocoderStatus.OK?this.geocodeSuccess(t):this.geocodeFailure(type,value)},t.prototype.geocodeSuccess=function(t){return this.debug("geocodeSuccess",t),t[0]?(this.updateUI(t[0].formatted_address,t[0].geometry.location),this.update?this.updateMap(t[0].geometry):void 0):this.showError(this.geocodeErrorMsg())},t.prototype.geocodeFailure=function(t,e){return this.debug("geocodeFailure",t),"address"===t?this.showError(this.invalidAddressMsg(e)):(this.showError(this.noAddressFoundMsg()),this.updateUI("",e))},t.prototype.showError=function(t){return $(this.errorField).html(t),$(this.errorField).show(),setTimeout(function(){return $(this.errorField).hide()},1e3)},t.prototype.autoCompleteInit=function(t){var e,i,n;return t=t||{},this.region=t.region||this.defaultOptions.region,this.country=t.country||this.defaultOptions.country,this.debug("region",this.region),n=this,e=t.autocomplete||{},i={select:function(t,e){return n.updateUI(e.item.value,e.item.geocode.geometry.location),n.updateMap(e.item.geocode.geometry)},source:function(t,e){var i,s,o,r;return r="",o=n.region,o&&(r=", "+o),i=t.term+r,n.debug("geocode address",i),s={address:i},n.geocoder.geocode(s,function(t){return e($.map(t,function(t){var e;return e=t.formatted_address.replace(", "+n.country,""),{label:e,value:e,geocode:t}}))})}},e=$.extend(!0,i,e),$(this.inputField).autocomplete(e),$(this.inputField).bind("keydown",this.keyDownHandler)},t.prototype.keyDownHandler=function(t){return 13===t.keyCode?(this.geocodeLookup("address",$(this.inputField).val(),!0),$(this.inputField).autocomplete("disable")):$(this.inputField).autocomplete("enable")},t}(),GmapsCompleterDefaultAssist=function(){function t(){}return t.prototype.options={mapElem:"#gmaps-canvas",zoomLevel:2,mapType:google.maps.MapTypeId.ROADMAP,pos:[0,0],inputField:"#gmaps-input-address",errorField:"#gmaps-error",debugOn:!0},t.prototype.updateMap=function(t){var e,i;return e=this.map,i=this.marker,e&&e.fitBounds(t.viewport),i?i.setPosition(t.location):void 0},t.prototype.updateUI=function(t,e){var i,n,s;return n=this.inputField,i=this.country,$(n).autocomplete("close"),this.debug("country",i),s=t.replace(", "+i,""),s=t,this.debug("updateAdr",s),$(n).val(s),this.positionOutputter(e)},t.prototype.positionOutputter=function(t){return $("#gmaps-output-latitude").html(t.lat()),$("#gmaps-output-longitude").html(t.lng())},t.prototype.geocodeErrorMsg=function(){return"Sorry, something went wrong. Try again!"},t.prototype.invalidAddressMsg=function(t){return"Sorry! We couldn't find "+t+". Try a different search term, or click the map."},t.prototype.noAddressFoundMsg=function(){return"Woah... that's pretty remote! You're going to have to manually enter a place name."},t}(),window.GmapsCompleter=GmapsCompleter,window.GmapsCompleterDefaultAssist=GmapsCompleterDefaultAssist;